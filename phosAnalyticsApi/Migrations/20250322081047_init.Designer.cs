// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace phosAnalyticsApi.Migrations
{
    [DbContext(typeof(phosAnalyticsApiContext))]
    [Migration("20250322081047_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("phosAnalyticsApi.Models.ChartData", b =>
                {
                    b.Property<Guid>("ChartDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChartDataId");

                    b.ToTable("ChartData");
                });

            modelBuilder.Entity("phosAnalyticsApi.Models.ChartPoint", b =>
                {
                    b.Property<Guid>("ChartPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChartDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ChartPointId");

                    b.HasIndex("ChartDataId");

                    b.ToTable("ChartPoint");
                });

            modelBuilder.Entity("phosAnalyticsApi.Models.ChartPoint", b =>
                {
                    b.HasOne("phosAnalyticsApi.Models.ChartData", null)
                        .WithMany("Points")
                        .HasForeignKey("ChartDataId");
                });

            modelBuilder.Entity("phosAnalyticsApi.Models.ChartData", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
